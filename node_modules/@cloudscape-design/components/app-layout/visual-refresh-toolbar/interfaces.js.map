{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../../../src/app-layout/visual-refresh-toolbar/interfaces.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,sCAAsC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport { AppLayoutProps, AppLayoutPropsWithDefaults } from '../interfaces';\nimport { FocusControlState } from '../utils/use-focus-control';\nimport { SplitPanelFocusControlState } from '../utils/use-split-panel-focus-control';\nimport { SplitPanelSideToggleProps } from '../../internal/context/split-panel-context';\nimport { VerticalLayoutOutput } from './compute-layout';\n\n// Widgetization notice: structures in this file are shared multiple app layout instances, possibly different minor versions.\n// Treat thsese structures as an API and do not make incompatible changes.\nexport interface AppLayoutInternals {\n  ariaLabels: AppLayoutPropsWithDefaults['ariaLabels'];\n  headerVariant: AppLayoutPropsWithDefaults['headerVariant'];\n  placement: AppLayoutPropsWithDefaults['placement'];\n  navigationOpen: AppLayoutPropsWithDefaults['navigationOpen'];\n  navigationFocusControl: FocusControlState;\n  navigation: React.ReactNode;\n  splitPanelPosition: AppLayoutProps.SplitPanelPreferences['position'];\n  splitPanelOpen: boolean;\n  splitPanelControlId: string;\n  splitPanelFocusControl: SplitPanelFocusControlState;\n  splitPanelToggleConfig: SplitPanelSideToggleProps;\n  isMobile: boolean;\n  activeDrawer: AppLayoutProps.Drawer | undefined;\n  activeDrawerSize: number;\n  minDrawerSize: number;\n  maxDrawerSize: number;\n  drawers: ReadonlyArray<AppLayoutProps.Drawer>;\n  drawersFocusControl: FocusControlState;\n  stickyNotifications: AppLayoutPropsWithDefaults['stickyNotifications'];\n  breadcrumbs: React.ReactNode;\n  toolbarState: 'show' | 'hide';\n  setToolbarState: (state: 'show' | 'hide') => void;\n  verticalOffsets: VerticalLayoutOutput;\n  setNotificationsHeight: (height: number) => void;\n  setToolbarHeight: (height: number) => void;\n  onSplitPanelToggle: () => void;\n  onNavigationToggle: (open: boolean) => void;\n  onActiveDrawerChange: (newDrawerId: string | null) => void;\n  onActiveDrawerResize: (detail: { id: string; size: number }) => void;\n}\n"]}