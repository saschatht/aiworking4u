{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/popover/index.tsx"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,sCAAsC;AACtC,OAAO,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AACtC,OAAO,eAAuC,MAAM,YAAY,CAAC;AACjE,OAAO,EAAE,gBAAgB,EAAE,MAAM,kCAAkC,CAAC;AACpE,OAAO,EAAE,gBAAgB,EAAE,MAAM,sCAAsC,CAAC;AACxE,OAAO,gBAAgB,MAAM,sCAAsC,CAAC;AACpE,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,+CAA+C,CAAC;AAEzE,OAAO,eAAe,MAAM,iCAAiC,CAAC;AAI9D,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,CAC9B,CACE,EAUe,EACf,GAAgC,EAChC,EAAE;QAZF,EACE,QAAQ,GAAG,OAAO,EAClB,IAAI,GAAG,QAAQ,EACf,UAAU,GAAG,KAAK,EAClB,WAAW,GAAG,MAAM,EACpB,aAAa,GAAG,IAAI,EACpB,gBAAgB,GAAG,KAAK,EACxB,eAAe,GAAG,IAAI,EACtB,MAAM,OAEO,EADV,IAAI,cATT,mHAUC,CADQ;IAIT,IAAI,aAAa,EAAE;QACjB,IAAI,aAAa,IAAI,CAAC,MAAM,EAAE;YAC5B,QAAQ,CAAC,SAAS,EAAE,iEAAiE,CAAC,CAAC;SACxF;KACF;IAED,MAAM,kBAAkB,GAAG,gBAAgB,CAAC,SAAS,EAAE;QACrD,KAAK,EAAE,EAAE,aAAa,EAAE,UAAU,EAAE,QAAQ,EAAE,gBAAgB,EAAE,IAAI,EAAE,WAAW,EAAE;KACpF,CAAC,CAAC;IACH,MAAM,aAAa,GAAG,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAE7C,MAAM,WAAW,GAAG,MAAM,CAA4B,IAAI,CAAC,CAAC;IAC5D,eAAe,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;IAElC,OAAO,CACL,oBAAC,eAAe,kBACd,GAAG,EAAE,WAAW,EAChB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,EAClB,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,UAAU,EACtB,WAAW,EAAE,WAAW,EACxB,aAAa,EAAE,aAAa,EAC5B,gBAAgB,EAAE,gBAAgB,EAClC,eAAe,EAAE,eAAe,IAC5B,aAAa,EACb,kBAAkB,EACtB,CACH,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACrC,eAAe,OAAO,CAAC","sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport InternalPopover, { InternalPopoverRef } from './internal';\nimport { getExternalProps } from '../internal/utils/external-props';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { isDevelopment } from '../internal/is-development';\nimport { warnOnce } from '@cloudscape-design/component-toolkit/internal';\nimport { PopoverProps } from './interfaces';\nimport useForwardFocus from '../internal/hooks/forward-focus';\n\nexport { PopoverProps };\n\nconst Popover = React.forwardRef(\n  (\n    {\n      position = 'right',\n      size = 'medium',\n      fixedWidth = false,\n      triggerType = 'text',\n      dismissButton = true,\n      renderWithPortal = false,\n      wrapTriggerText = true,\n      header,\n      ...rest\n    }: PopoverProps,\n    ref: React.Ref<PopoverProps.Ref>\n  ) => {\n    if (isDevelopment) {\n      if (dismissButton && !header) {\n        warnOnce('Popover', `You should provide a \\`header\\` when \\`dismissButton\\` is true.`);\n      }\n    }\n\n    const baseComponentProps = useBaseComponent('Popover', {\n      props: { dismissButton, fixedWidth, position, renderWithPortal, size, triggerType },\n    });\n    const externalProps = getExternalProps(rest);\n\n    const internalRef = useRef<InternalPopoverRef | null>(null);\n    useForwardFocus(ref, internalRef);\n\n    return (\n      <InternalPopover\n        ref={internalRef}\n        header={header}\n        position={position}\n        size={size}\n        fixedWidth={fixedWidth}\n        triggerType={triggerType}\n        dismissButton={dismissButton}\n        renderWithPortal={renderWithPortal}\n        wrapTriggerText={wrapTriggerText}\n        {...externalProps}\n        {...baseComponentProps}\n      />\n    );\n  }\n);\n\napplyDisplayName(Popover, 'Popover');\nexport default Popover;\n"]}